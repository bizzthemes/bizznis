<?php
/*
	WARNING! DO NOT EDIT THIS FILE!
	This file is part of the core Bizznis parent theme. 
	Please do all modifications in the form of a child theme.
*/

/**
 * Filter the contact methods registered for users.
 *
 * @since 1.0.0
 */
add_filter( 'user_contactmethods', 'bizznis_user_contactmethods' );
function bizznis_user_contactmethods( $contactmethods ) {
	$contactmethods['googleplus'] = __( 'Google+', 'bizznis' );
	return $contactmethods;
}

/**
 * Hook the User profile options.
 *
 * @since 1.0.0
 */
add_action( 'admin_init', 'bizznis_add_user_profile_fields' );
function bizznis_add_user_profile_fields() {
	add_action( 'show_user_profile', 'bizznis_user_options_fields' );
	add_action( 'edit_user_profile', 'bizznis_user_options_fields' );
	add_action( 'show_user_profile', 'bizznis_user_archive_fields' );
	add_action( 'edit_user_profile', 'bizznis_user_archive_fields' );
	add_action( 'show_user_profile', 'bizznis_user_layout_fields' );
	add_action( 'edit_user_profile', 'bizznis_user_layout_fields' );
}

/**
 * Adds fields for user permissions for Bizznis features to the user edit screen.
 *
 * @since 1.0.0
 */
function bizznis_user_options_fields( $user ) {
	if ( ! current_user_can( 'edit_users', $user->ID ) ) {
		return false;
	}
	?>
	<h3><?php _e( 'User Permissions', 'bizznis' ); ?></h3>
	<table class="form-table">
		<tbody>
			<tr>
				<th scope="row"><?php _e( 'Bizznis Admin Menus', 'bizznis' ); ?></th>
				<td>
					<input id="bizznis-bizznis-meta[bizznis_admin_menu]" name="bizznis-bizznis-meta[bizznis_admin_menu]" type="checkbox" value="1" <?php checked( get_the_author_meta( 'bizznis_admin_menu', $user->ID ) ); ?> />
					<label for="bizznis-bizznis-meta[bizznis_admin_menu]"><?php _e( 'Enable Bizznis Admin Menus?', 'bizznis' ); ?></label><br />
				</td>
			</tr>
		</tbody>
	</table>
	<?php
}

/**
 * Adds fields for author archives contents to the user edit screen.
 *
 * @since 1.0.0
 */
function bizznis_user_archive_fields( $user ) {
	if ( ! current_user_can( 'edit_users', $user->ID ) ) {
		return false;
	}
	?>
	<h3><?php _e( 'Author Archive Settings', 'bizznis' ); ?></h3>
	<p><span class="description"><?php _e( 'These settings apply to this author\'s archive pages.', 'bizznis' ); ?></span></p>
	<table class="form-table">
		<tbody>
			<tr>
				<th scope="row"><label for="headline"><?php _e( 'Custom Archive Headline', 'bizznis' ); ?></label></th>
				<td>
					<input name="bizznis-meta[headline]" id="headline" type="text" value="<?php echo esc_attr( get_the_author_meta( 'headline', $user->ID ) ); ?>" class="regular-text" /><br />
					<span class="description"><?php printf( __( 'Will display in the %s tag at the top of the first page', 'bizznis' ), '<code>&lt;h1&gt;&lt;/h1&gt;</code>' ); ?></span>
				</td>
			</tr>
			<tr>
				<th scope="row" valign="top"><label for="intro_text"><?php _e( 'Custom Description Text', 'bizznis' ); ?></label></th>
				<td>
					<textarea name="bizznis-meta[intro_text]" id="intro_text" rows="5" cols="30"><?php echo esc_textarea( get_the_author_meta( 'intro_text', $user->ID ) ); ?></textarea><br />
					<span class="description"><?php _e( 'This text will be the first paragraph, and display on the first page', 'bizznis' ); ?></span>
				</td>
			</tr>
			<tr>
				<th scope="row"><?php _e( 'Author Box', 'bizznis' ); ?></th>
				<td>
					<input id="bizznis-meta[bizznis_author_box_single]" name="bizznis-meta[bizznis_author_box_single]" type="checkbox" value="1" <?php checked( get_the_author_meta( 'bizznis_author_box_single', $user->ID ) ); ?> />
					<label for="bizznis-meta[bizznis_author_box_single]"><?php _e( 'Enable Author Box on this User\'s Posts?', 'bizznis' ); ?></label><br />
					<input id="bizznis-meta[bizznis_author_box_archive]" name="bizznis-meta[bizznis_author_box_archive]" type="checkbox" value="1" <?php checked( get_the_author_meta( 'bizznis_author_box_archive', $user->ID ) ); ?> />
					<label for="bizznis-meta[bizznis_author_box_archive]"><?php _e( 'Enable Author Box on this User\'s Archives?', 'bizznis' ); ?></label>
				</td>
			</tr>
		</tbody>
	</table>
	<?php
}

/**
 * Adds author archive layout picker to the user edit screen.
 *
 * @since 1.0.0
 */
function bizznis_user_layout_fields( $user ) {
	if ( ! current_user_can( 'edit_users', $user->ID ) ) {
		return false;
	}
	
	if ( ! bizznis_has_multiple_layouts() ) {
		return;
	}
	
	$layout = get_the_author_meta( 'layout', $user->ID );
	$layout = $layout ? $layout : '';
	$customize_url = add_query_arg( 'return', urlencode( wp_unslash( $_SERVER['REQUEST_URI'] ) ), wp_customize_url() );
	?>
	<h3><?php _e( 'Layout Settings', 'bizznis' ); ?></h3>
	<p><span class="description"><?php _e( 'These settings apply to this author\'s archive pages.', 'bizznis' ); ?></span></p>
	<table class="form-table">
		<tbody>
			<tr>
				<th scope="row" valign="top"><?php _e( 'Choose Layout', 'bizznis' ); ?></th>
				<td>
					<fieldset class="bizznis-layout-selector">
						<legend class="screen-reader-text"><?php _e( 'Choose Layout', 'bizznis' ); ?></legend>
						<p><input type="radio" name="bizznis-meta[layout]" class="default-layout" id="default-layout" value="" <?php checked( $layout, '' ); ?> /> <label class="default" for="default-layout"><?php printf( __( 'Default Layout set in <a href="%s">Theme Settings</a>', 'bizznis' ), menu_page_url( 'bizznis', 0 ) ); ?></label></p>
						<?php bizznis_layout_selector( array( 'name' => 'bizznis-meta[layout]', 'selected' => $layout, 'type' => 'site' ) ); ?>
					</fieldset>
				</td>
			</tr>
		</tbody>
	</table>
	<?php
}

/**
 * Adds / updates user meta when user edit page is saved.
 *
 * @since 1.0.0
 */
add_action( 'personal_options_update',  'bizznis_user_meta_save' );
add_action( 'edit_user_profile_update', 'bizznis_user_meta_save' );
function bizznis_user_meta_save( $user_id ) {
	if ( ! current_user_can( 'edit_users', $user_id ) ) {
		return;
	}
	
	if ( ! isset( $_POST['bizznis-meta'] ) || ! is_array( $_POST['bizznis-meta'] ) ) {
		return;
	}
	
	$defaults = array(
		'bizznis_admin_menu'         	=> '',
		'bizznis_settings_menu'  	 	=> '',
		'bizznis_author_box_single'  	=> '',
		'bizznis_author_box_archive' 	=> '',
		'headline'                   	=> '',
		'intro_text'                 	=> '',
		'doctitle'                   	=> '',
		'meta_description'           	=> '',
		'noindex'                   	=> '',
		'nofollow'                  	=> '',
		'noarchive'                  	=> '',
		'layout'                     	=> '',
	);
	
	/**
	 * Filter the user meta defaults array.
	 *
	 * Allows developer to filter the default array of user meta key => value pairs.
	 *
	 * @since 1.2.0
	 *
	 * @param array $defaults Default user meta array.
	 */
	$defaults = apply_filters( 'bizznis_user_meta_defaults', $defaults );
	$meta = wp_parse_args( $_POST['bizznis-meta'], $defaults );
	
	// Sanitize.
	$meta['headline']   = strip_tags( $meta['headline'] );
	$meta['intro_text'] = current_user_can( 'unfiltered_html' ) ? $meta['intro_text'] : bizznis_formatting_kses( $meta['intro_text'] );
	
	foreach ( $meta as $key => $value ) {
		update_user_meta( $user_id, $key, $value );
	}
}

/**
 * This filter function checks to see if user data has actually been saved, or if defaults need to be forced.
 *
 * @since 1.0.0
 */
add_filter( 'get_the_author_bizznis_admin_menu', 'bizznis_user_meta_default_on', 10, 2 );
function bizznis_user_meta_default_on( $value, $user_id ) {
	// Get the name of the field by removing the prefix from the active filter.
	$field = str_replace( 'get_the_author_', '', current_filter() );
	
	// If a real value exists, simply return it.
	if ( $value ) {
		return $value;
	}
	
	// Setup user data.
	if ( ! $user_id ) {
		global $authordata;
	} else {
		$authordata = get_userdata( $user_id );
	}
	
	// Just in case.
	$user_field = "user_$field";
	if ( isset( $authordata->$user_field ) ) {
		return $authordata->user_field;
	}
	
	// If an empty or false value exists, return it.
	if ( isset( $authordata->$field ) ) {
		return $value;
	}
	
	// If all that fails, default to true.
	return 1;
}

/**
 * This is a special filter function to be used to conditionally force a default 1 value for each users' author box setting.
 *
 * @since 1.0.0
 */
add_filter( 'get_the_author_bizznis_author_box_single',	'bizznis_author_box_single_default_on', 10, 2 );
function bizznis_author_box_single_default_on( $value, $user_id ) {
	if ( bizznis_get_option( 'author_box_single' ) ) {
		return bizznis_user_meta_default_on( $value, $user_id );
	} else {
		return $value;
	}
}